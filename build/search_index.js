var documenterSearchIndex = {"docs":
[{"location":"#Welcome","page":"Welcome","title":"Welcome","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"figure_second is a layout first approach to plotting based on the ideas of the python library figurefirst. The general workflow of the library is to define a layout of graphs in inkscape, label each object with an XML id, and then plot  into these objects using common julia plotting libraries (Makie.jl, Plots.jl, etc).","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"Depth = 2","category":"page"},{"location":"#Example","page":"Welcome","title":"Example","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"TODO","category":"page"},{"location":"#API-Reference","page":"Welcome","title":"API Reference","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"For figure layout, the most useful functions will be updater to construct a common object, plot_figures to place figures in the document, relative_dimensions for sizing  plots correctly. ","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"The ids function can sometimes be useful for debugging purposes.","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"Modules = [figure_second, figure_second.python_bindings]","category":"page"},{"location":"#figure_second.plot_figures-Tuple{Updater, Dict{String, Figure}}","page":"Welcome","title":"figure_second.plot_figures","text":"plot_figures(updater::Updater, figure_map::Dict{String, Makie.Figure})\n\nupdater is a wrapper around the python class. It represents the inkscape svg document we are plotting on.\n\nfigure_map is a dictionary with keys containing ids of inkscape objects  (rectangles or images) to plot on top of. The values of figure_map are  figures to render. \n\nThe user is responsible for filling each figure with content, and sizing it appropriately  to the dimensions of the inkscape object. See relative_dimensions for sizing considerations.\n\n\n\n\n\n","category":"method"},{"location":"#figure_second.python_bindings.Dimensions","page":"Welcome","title":"figure_second.python_bindings.Dimensions","text":"Dimensions(width::Float64, height::Float64)\n\nraw dimensions of an inkscape object. \n\n\n\n\n\n","category":"type"},{"location":"#figure_second.python_bindings.Updater","page":"Welcome","title":"figure_second.python_bindings.Updater","text":"Updater\n\nrepresentation of an inkscape document. An Updater can either mutate an the underlying inkscape file. or export to a new file See documentation on the constructor (updater)\n\n\n\n\n\n","category":"type"},{"location":"#figure_second.python_bindings.dimensions-Tuple{Updater, String}","page":"Welcome","title":"figure_second.python_bindings.dimensions","text":"dimensions(updater::Updater, id::String)::Dimensions\n\nparse the raw dimensions of an inkscape object with id id and return them  as a Dimensions object\n\n\n\n\n\n","category":"method"},{"location":"#figure_second.python_bindings.ids-Tuple{Updater}","page":"Welcome","title":"figure_second.python_bindings.ids","text":"ids(updater::Updater)::Vector{String}\n\nfetch all valid ids from the base_path document of an Updater\n\n\n\n\n\n","category":"method"},{"location":"#figure_second.python_bindings.relative_dimensions-Tuple{Updater, String, Float64}","page":"Welcome","title":"figure_second.python_bindings.relative_dimensions","text":"relative_dimensions(updater::Updater, id::String, height::Float64)::Tuple{Float64, Float64}\n\nCalculate the required dimension pair (width, height) to maintain the aspect ratio of  the inkscape object. Returns result in fractional units.\n\n\n\n\n\n","category":"method"},{"location":"#figure_second.python_bindings.relative_dimensions-Tuple{Updater, String, Int64}","page":"Welcome","title":"figure_second.python_bindings.relative_dimensions","text":"relative_dimensions(updater::Updater, id::String, height::Int)::Tuple{Int, Int}\n\nCalculate the required dimension pair (width, height) to maintain the aspect ratio of  the inkscape object. Rounds the otherwise float point value and converts to Int. \n\nThis is useful for plotting functions that expect an interger number for pixel dimensions\n\n\n\n\n\n","category":"method"},{"location":"#figure_second.python_bindings.update-Tuple{Updater, Dict{String, String}}","page":"Welcome","title":"figure_second.python_bindings.update","text":"update(updater::Updater, map::Dict{String, String})\n\nlow level function to update the contents of an inkscape file. The map argument maps an inkscape object's id to a file path containing a .png encoded image. The .png encoded image (dictionary value) will be placed in the inkscape object with the id of the key.\n\n\n\n\n\n","category":"method"},{"location":"#figure_second.python_bindings.updater-Tuple{String, String}","page":"Welcome","title":"figure_second.python_bindings.updater","text":"updater(base_path::String, output_file::String)::Updater\n\nUpdater constructor for a workflow that reads in a file base_path and  exports all changes under a new file output_file. \n\nThis Updater instance will not mutate the underlying base_path inkscape file\n\n\n\n\n\n","category":"method"},{"location":"#figure_second.python_bindings.updater-Tuple{String}","page":"Welcome","title":"figure_second.python_bindings.updater","text":"updater(base_path::String)::Updater\n\nUpdater constructor for a workflow that reads in a file base_path and  mutates it in place with all plotting changes.\n\n\n\n\n\n","category":"method"}]
}
